{"version":3,"sources":["styles/globalStyles.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/card.js","App.js","reportWebVitals.js","index.js"],"names":["Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","minted","canClaimWithKimono","shiburaiDiscountAtAmount","reverted","error","dataReducer","totalSupply","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","Number","call","axios","get","console","log","connectFailed","switchNetwork","window","ethereum","request","method","params","chainId","code","chainName","rpcUrls","updateAccount","StyledButton","button","StyledRoundButton","StyledImg","img","StyledLink","Card","CONFIG","CONTRACT_ADDRESS","SCAN_LINK","MARKETPLACE","MARKETPLACE_LINK","NETWORK","NFT_NAME","GAS_LIMIT","MEDIA","SYMBOL","MAX_SUPPLY","WEI_COST","DISPLAY_COST","index","api_key","useDispatch","useSelector","useState","feedback","setFeedback","mintAmount","setMintAmount","balanceShiburai","setBalanceShiburai","minting","setMinting","mintedCount","setMintedCount","mintNFTs","nftID","cost","free","gasLimit","totalCostWei","totalGasLimit","String","mintPublic","send","to","from","value","once","err","then","receipt","getData","headers","res","total","balance","useEffect","input","len","style","backgroundColor","padding","borderRadius","border","boxShadow","maxWidth","margin","src","alt","textAlign","fontSize","color","fontWeight","target","href","length","substring","onClick","e","open","preventDefault","fetch","Accept","configResponse","json","abiResponse","abi","isMetaMask","Web3EthContract","setProvider","Web3","accounts","ID","SmartContractObj","on","location","reload","connect","disabled","lineHeight","newMintAmount","decrementMintAmount","incrementMintAmount","StyledLogo","ResponsiveWrapper","App","SET_CONFIG","freeMinting","getConfig","result","id","width","map","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d53b57d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--base);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  minted: 0,\r\n  canClaimWithKimono: false,\r\n  shiburaiDiscountAtAmount: 0,\r\n  reverted: false,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        minted: action.payload.minted,\r\n        canClaimWithKimono: action.payload.canClaimWithKimono,\r\n        shiburaiDiscountAtAmount: action.payload.shiburaiDiscountAtAmount,\r\n        reverted: action.payload.reverted,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\nimport axios from 'axios';\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let blockchain = await store.getState().blockchain;\r\n\r\n      let minted = await blockchain.smartContract.methods.totalSupply();\r\n      let canClaimWithKimono = await blockchain.smartContract.methods.canClaimWithKimono(0 , blockchain.account);\r\n      let shiburaiDiscountAtAmount = Number(await blockchain.smartContract.methods.shiburaiDiscountAtAmount().call());\r\n      let reverted = false;\r\n\r\n      let res = await axios.get(`https://viral-crypto-minting.herokuapp.com?leaf=${blockchain.account}`);\r\n\r\n      // blockchain.smartContract.methods\r\n      // .claim(res.data.proof)\r\n      // .call()\r\n      // .then( (res) =>{\r\n      //   console.log(\"SUCCESS\");\r\n      //   reverted = true;\r\n      // })\r\n      // .catch(\r\n      //   console.log(\"Error\")\r\n      // )\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          minted,\r\n          canClaimWithKimono,\r\n          shiburaiDiscountAtAmount,\r\n          reverted\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\n\r\nexport const switchNetwork = async () => {\r\n  const { ethereum } = window;\r\n  try {\r\n    await ethereum.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: '0x4' }],\r\n    });\r\n  } catch (switchError) {\r\n    // This error code indicates that the chain has not been added to MetaMask.\r\n    if (switchError.code === 4902) {\r\n      try {\r\n        await ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: '0x4',\r\n              chainName: 'Rinkeby Test Network',\r\n              rpcUrls: ['https://rinkeby.infura.io/v3/'] /* ... */,\r\n            },\r\n          ],\r\n        });\r\n      } catch (addError) {\r\n        // handle \"add\" error\r\n      }\r\n    }\r\n    // handle other \"switch\" errors\r\n  }\r\n}\r\n\r\nexport const connect = (index) => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const abiResponse = await fetch(`/config/${CONFIG[index].SYMBOL}_abi.json`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n\r\n    const { ethereum } = window;\r\n\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        let networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n\r\n        if (networkId != CONFIG[index].NETWORK.ID) await switchNetwork();\r\n\r\n        const SmartContractObj = new Web3EthContract(\r\n          abi,\r\n          CONFIG[index].CONTRACT_ADDRESS\r\n        );\r\n        dispatch(\r\n          connectSuccess({\r\n            account: accounts[0],\r\n            smartContract: SmartContractObj,\r\n            web3: web3,\r\n          })\r\n        );\r\n        // Add listeners start\r\n        ethereum.on(\"accountsChanged\", (accounts) => {\r\n          dispatch(updateAccount(accounts[0]));\r\n        });\r\n        ethereum.on(\"chainChanged\", async () => {\r\n          networkId = await ethereum.request({\r\n            method: \"net_version\",\r\n          });\r\n          if( networkId !== \"4\") window.location.reload();\r\n        });\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport { connect, callClaim } from \"../redux/blockchain/blockchainActions\";\r\nimport * as s from \"../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px solid var(--primary);\r\n  background-color: var(--accent);\r\n  border-radius: none;\r\n  width: 360px;\r\n  @media (max-width: 600px) {\r\n      width: 90%;\r\n  }\r\n  @media (min-width: 950px) {\r\n    width: 220px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 280px;\r\n  }\r\n  @media (min-width: 1500px) {\r\n    width: 360px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--primary);\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Card = ({ CONFIG: { CONTRACT_ADDRESS, SCAN_LINK, MARKETPLACE, MARKETPLACE_LINK, NETWORK, NFT_NAME, GAS_LIMIT, MEDIA, SYMBOL, MAX_SUPPLY, WEI_COST, DISPLAY_COST }, index, api_key }) => {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [feedback, setFeedback] = useState(`Click Mint below to obtain your Sentinel NFT.`);\r\n    const [mintAmount, setMintAmount] = useState(1);\r\n    const [balanceShiburai, setBalanceShiburai] = useState(0);\r\n    const [minting, setMinting] = useState(false);\r\n\r\n    const [mintedCount, setMintedCount] = useState(null);\r\n\r\n    const mintNFTs = (nftID, free = false) => {\r\n        let cost;\r\n        if (nftID == 0) {\r\n            cost = WEI_COST;\r\n        }\r\n        let gasLimit = GAS_LIMIT;\r\n        let totalCostWei = free ? 0 : cost * mintAmount;\r\n        if (balanceShiburai > data.shiburaiDiscountAtAmount) totalCostWei / 2;\r\n        let totalGasLimit = String(gasLimit);\r\n        console.log(\"Cost: \", totalCostWei);\r\n        console.log(\"Gas limit: \", totalGasLimit);\r\n        setFeedback(`Minting your ${NFT_NAME}...`);\r\n        setMinting(true);\r\n        blockchain.smartContract.methods\r\n            .mintPublic(free ? 1 : mintAmount)\r\n            .send({\r\n                gasLimit: String(totalGasLimit),\r\n                to: CONTRACT_ADDRESS,\r\n                from: blockchain.account,\r\n                value: String(totalCostWei),\r\n            })\r\n            .once(\"error\", (err) => {\r\n                console.log(err);\r\n                setFeedback(\"Sorry, something went wrong please try again later.\");\r\n                setMinting(false);\r\n            })\r\n            .then((receipt) => {\r\n                console.log(receipt);\r\n                setFeedback(\r\n                    `WOW, the ${NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n                );\r\n                setMinting(false);\r\n                dispatch(fetchData(blockchain.account));\r\n                setMintAmount(1);\r\n            });\r\n    };\r\n    const claimNFTs = () => {\r\n        \r\n    }\r\n\r\n    const decrementMintAmount = () => {\r\n        let newMintAmount = mintAmount - 1;\r\n        if (newMintAmount < 1) {\r\n            newMintAmount = 1;\r\n        }\r\n        setMintAmount(newMintAmount);\r\n    };\r\n\r\n    const incrementMintAmount = () => {\r\n        let newMintAmount = mintAmount + 1;\r\n        if (newMintAmount > 2 && SYMBOL == \"Kimono\") {\r\n            newMintAmount = 2;\r\n        }\r\n        if (newMintAmount > MAX_SUPPLY - mintedCount) {\r\n            newMintAmount = MAX_SUPPLY - mintedCount;\r\n        }\r\n        setMintAmount(newMintAmount);\r\n    };\r\n\r\n    const getData = async () => {\r\n\r\n        let res = await axios.get(`https://deep-index.moralis.io/api/v2/nft/${CONTRACT_ADDRESS}`, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"X-API-Key\": api_key\r\n            }\r\n        })\r\n\r\n        setMintedCount(res.data.total);\r\n\r\n        res = await axios.get(`https://deep-index.moralis.io/api/v2/${CONTRACT_ADDRESS}/balance?chain=rinkeby`, {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"X-API-Key\": api_key\r\n            }\r\n        })\r\n\r\n        setBalanceShiburai(res.data.balance);\r\n\r\n\r\n        // res = await web3.contract.claim(res.data.proof).call();\r\n\r\n        // dispatch(callClaim(res.data.proof));\r\n\r\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n            dispatch(fetchData(blockchain.account));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [blockchain.account]);\r\n\r\n\r\n    const truncate = (input, len) => input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\n    return (\r\n\r\n        <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n                backgroundColor: \"var(--accent)\",\r\n                padding: 24,\r\n                borderRadius: 24,\r\n                border: \"4px solid var(--primary)\",\r\n                boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n                maxWidth: \"700px\",\r\n                margin: \"12px\"\r\n            }}\r\n        >\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n                <StyledImg src={`/config/images/${MEDIA}`} alt=\"\" />\r\n            </s.Container>\r\n            <s.SpacerSmall />\r\n            <s.TextTitle\r\n                style={{ textAlign: \"center\", fontSize: 50, color: \"var(--accent-text)\" }}\r\n            >\r\n                {SYMBOL}\r\n            </s.TextTitle>\r\n            <s.TextTitle\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    fontSize: 42,\r\n                    fontWeight: \"bold\",\r\n                    color: \"var(--accent-text)\",\r\n                }}\r\n            >\r\n                {mintedCount} / {MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextTitle\r\n                style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n            >\r\n                {\r\n                    balanceShiburai > data.shiburaiDiscountAtAmount ?\r\n                        <>{DISPLAY_COST / 2}{\" \"}{NETWORK.SYMBOL} Each <span style={{ color: \"red\" }}>50% off</span> </>\r\n                        :\r\n                        `${DISPLAY_COST} ${NETWORK.SYMBOL} Each`\r\n                }\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n                style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n            >\r\n                Excluding gas fees.\r\n            </s.TextDescription>\r\n            <s.TextDescription\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    color: \"var(--primary-text)\",\r\n                }}\r\n            >\r\n                <StyledLink target={\"_blank\"} href={SCAN_LINK}>\r\n                    {truncate(CONTRACT_ADDRESS, 24)}\r\n                </StyledLink>\r\n            </s.TextDescription>\r\n            <span\r\n                style={{\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n                <StyledButton\r\n                    onClick={(e) => {\r\n                        window.open(\"/config/roadmap.pdf\", \"_blank\");\r\n                    }}\r\n                >\r\n                    Roadmap\r\n                </StyledButton>\r\n                <StyledButton\r\n                    onClick={(e) => {\r\n                        window.open(MARKETPLACE_LINK, \"_blank\");\r\n                    }}\r\n                >\r\n                    {MARKETPLACE}\r\n                </StyledButton>\r\n            </span>\r\n            <s.SpacerSmall />\r\n            {Number(mintedCount) >= MAX_SUPPLY ? (\r\n                <>\r\n                    <s.TextTitle\r\n                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                    >\r\n                        The sale has ended.\r\n                    </s.TextTitle>\r\n                    <s.TextDescription\r\n                        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                    >\r\n                        You can still find {NFT_NAME} on\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledLink target={\"_blank\"} href={MARKETPLACE_LINK}>\r\n                        {MARKETPLACE}\r\n                    </StyledLink>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <s.SpacerSmall />\r\n                    {blockchain.account === \"\" ||\r\n                        blockchain.smartContract === null ? (\r\n                        <s.Container ai={\"center\"} jc={\"center\"}>\r\n                            <s.TextDescription\r\n                                style={{\r\n                                    textAlign: \"center\",\r\n                                    color: \"var(--accent-text)\",\r\n                                }}\r\n                            >\r\n                                Connect wallet to obtain Shiburai NFT\r\n                            </s.TextDescription>\r\n                            <s.SpacerSmall />\r\n                            <StyledButton\r\n                                onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    dispatch(connect(index));\r\n                                    getData();\r\n                                }}\r\n                            >\r\n                                CONNECT\r\n                            </StyledButton>\r\n                            {blockchain.errorMsg !== \"\" ? (\r\n                                <>\r\n                                    <s.SpacerSmall />\r\n                                    <s.TextDescription\r\n                                        style={{\r\n                                            textAlign: \"center\",\r\n                                            color: \"var(--accent-text)\",\r\n                                        }}\r\n                                    >\r\n                                        {blockchain.errorMsg}\r\n                                    </s.TextDescription>\r\n                                </>\r\n                            ) : null}\r\n                        </s.Container>\r\n                    ) : (\r\n                        <>\r\n                            <s.TextDescription\r\n                                style={{\r\n                                    textAlign: \"center\",\r\n                                    color: \"var(--accent-text)\",\r\n                                }}\r\n                            >\r\n                                {feedback}\r\n                            </s.TextDescription>\r\n                            <s.SpacerMedium />\r\n                            {data.reverted ?\r\n                                <>\r\n                                    <s.TextDescription\r\n                                        style={{\r\n                                            textAlign: \"center\",\r\n                                            color: \"var(--accent-text)\",\r\n                                        }}\r\n                                    >\r\n                                        You are whitelisted, claim for free here\r\n                                    </s.TextDescription>\r\n                                    <s.SpacerMedium />\r\n                                    <StyledButton\r\n                                        disabled={minting ? 1 : 0}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            claimNFTs(0, true);\r\n                                            getData();\r\n                                        }}\r\n                                    >\r\n                                        {minting ? \"BUSY\" : \"Claim whitelisted\"}\r\n                                    </StyledButton>\r\n                                </>\r\n                                : \"\"\r\n                            }\r\n                            <s.SpacerMedium />\r\n                            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                                <StyledRoundButton\r\n                                    style={{ lineHeight: 0.4 }}\r\n                                    disabled={minting ? 1 : 0}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        decrementMintAmount();\r\n                                    }}\r\n                                >\r\n                                    -\r\n                                </StyledRoundButton>\r\n                                <s.SpacerMedium />\r\n                                <s.TextDescription\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        color: \"var(--accent-text)\",\r\n                                    }}\r\n                                >\r\n                                    {mintAmount}\r\n                                </s.TextDescription>\r\n                                <s.SpacerMedium />\r\n                                <StyledRoundButton\r\n                                    disabled={minting ? 1 : 0}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        incrementMintAmount();\r\n                                    }}\r\n                                >\r\n                                    +\r\n                                </StyledRoundButton>\r\n                            </s.Container>\r\n                            <s.SpacerMedium />\r\n                            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                                <StyledButton\r\n                                    disabled={minting ? 1 : 0}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        mintNFTs(0);\r\n                                        getData();\r\n                                    }}\r\n                                >\r\n                                    {minting ? \"BUSY\" : \"Mint\"}\r\n                                </StyledButton>\r\n                                {data.canClaimWithKimono ?\r\n                                    <StyledButton\r\n                                        disabled={minting ? 1 : 0}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault();\r\n                                            mintNFTs(0, true);\r\n                                            getData();\r\n                                        }}\r\n                                    >\r\n                                        {minting ? \"BUSY\" : \"Free Mint\"}\r\n                                    </StyledButton>\r\n                                    : \"\"\r\n                                }\r\n                            </s.Container>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n            <s.SpacerMedium />\r\n        </s.Container>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"./components/card\";\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 240px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n  margin-top: 40px;\r\n`;\r\nexport const CardGroup = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n`\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  @media (max-width: 950px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n\r\n  const [CONFIG, SET_CONFIG] = useState([]);\r\n  const MORALIS_API_KEY = '78KU4WCpkqjIAkGjSKbtRuYg7rjbfnEQkMtt6fLbVFh7chlqi3courfnXFjo461K';\r\n  const [freeMinting, setFreeMinting] = useState([]);\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const result = await configResponse.json();\r\n\r\n    SET_CONFIG(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        id=\"main\"\r\n        style={{\r\n          padding: 12,\r\n          backgroundColor: \"var(--base)\"\r\n        }}\r\n      >\r\n        <s.SpacerSmall />\r\n        <s.SpacerSmall />\r\n        <s.SpacerSmall />\r\n        <a href={\"/\"}>\r\n          <StyledLogo alt={\"logo\"} id=\"logo\" src={\"/config/images/logo.png\"} />\r\n        </a>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\", maxWidth: \"700px\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n              fontSize: \"20px\"\r\n            }}\r\n          >\r\n            The Sentinel gives passage into Viral Crypto.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n              fontSize: \"20px\"\r\n            }}\r\n          >\r\n            Minting and possessing a Sentinel rewards you with VC tokens, gives you access to create a profile on the VC platform, and also reserves an allocation to mint a unique generative avatar that grants benefits on Viral Crypto.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n        </s.Container>\r\n        <ResponsiveWrapper flex={1} style={{ padding: 12 }}>\r\n          {\r\n            CONFIG.length && CONFIG.map((item, index) => {\r\n              return <Card key={index} CONFIG={item} index={index} freeMinting={freeMinting} api_key={MORALIS_API_KEY} />\r\n            })\r\n          }\r\n        </ResponsiveWrapper>\r\n        <s.SpacerLarge />\r\n        <s.SpacerLarge />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Please make sure you are connected to the right network (\r\n            RIkeby Test Network ) and the correct address. Please note:\r\n            Once you make the purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            We have set the gas limit to {3000000} for the contract to\r\n            successfully mint your NFT. We recommend that you don't lower the\r\n            gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}